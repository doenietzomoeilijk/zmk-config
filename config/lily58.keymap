#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWE 0
#define COL 1
#define NAV 2
#define NUM 3
#define SYM 4
#define FUN 5
#define ADJ 6

/* Homerow mods, lifted from urob base.keymap */
#include "zmk-nodefree-config/helper.h"
#include "zmk-nodefree-config/keypos_def/keypos_58keys.h"

/* 58 KEY MATRIX / LAYOUT MAPPING
 ╭────────────────────────────┬────────────────────────────╮ 
 │  0   1   2   3   4   5     │      6   7   8   9  10  11 │ 
 │ 12  13  14  15  16  17     │     18  19  20  21  22  23 │ 
 │ 24  25  26  27  28  29     │     30  31  32  33  34  35 │ 
 │ 36  37  38  39  40  41  42 │ 43  44  45  46  47  48  49 │ 
 ╰───────────╮ 50  51  52  53 │ 54  55  56  57 ╭───────────╯ 
             ╰────────────────┴────────────────╯            
╭─────────────────────────────┬─────────────────────────────╮
│ LT5 LT4 LT3 LT2 LT1 LT0     │     RT0 RT1 RT2 RT3 RT4 RT5 │
│ LM5 LM4 LM3 LM2 LM1 LM0     │     RM0 RM1 RM2 RM3 RM4 RM5 │
│ LB5 LB4 LB3 LB2 LB1 LB0     │     RB0 RB1 RB2 RB3 RB4 RB5 │
│ LF5 LF4 LF3 LF2 LF1 LF0 LEC │ REC RF0 RF1 RF2 RF3 RF4 RF5 │
╰───────────╮ LH3 LH2 LH1 LH0 │ RH0 RH1 RH2 RH3 ╭───────────╯
            ╰─────────────────┴─────────────────╯            
  */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 LF0 LF1 LF2 LF3 LF4 LF5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 RF0 RF1 RF2 RF3 RF4 RF5
#define THUMBS LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3
/*
#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)
*/
/* End of homerow mods */

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <400>;
            quick-tap-ms = <50>;
            flavor = "balanced";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        }; 
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <400>;
            quick-tap-ms = <50>;
            flavor = "balanced";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        }; 
    };
/*
*/

    keymap {
        compatible = "zmk,keymap";

// &none         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &kp RALT                                  &kp RALT      &kp RSHFT     &kp RCTRL     &kp LALT      &kp RGUI      &none
// &trans        &trans        &trans        &trans        &trans        &trans                                    &trans        &trans        &trans        &trans        &trans        &trans
// &none         &none         &none         &none         &none         &none                                     &none         &none         &none         &none         &none         &none
//                                           &none         &none         &none         &none         &none         &none         &none         &none
        querty_layer {
            bindings = <
//            |             |             |             |             |             |             |             |             |             |             |             |             |
&kp ESC       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                    &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp MINUS
&kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T                                     &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSPC
&caps_word    &hml LGUI A   &hml LALT S   &hml LCTRL D  &hml LSHFT F  &hml RALT G                               &hmr RALT H   &hmr RSHFT J  &hmr LCTRL K  &hmr LALT L   &hmr RGUI SEMI &kp SQT
&kp GRAVE     &kp Z         &kp X         &kp C         &kp V         &kp B         &kp LBKT      &kp RBKT      &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp BSLH
                                          &none         &lt FUN TAB   &lt NAV BSPC  &lt NUM DEL   &lt NAV RET   &lt SYM SPACE &lt ADJ ESC   &none
            >;
        };

        colemak_layer {
            bindings = <
//            |             |             |             |             |             |             |             |             |             |             |             |             |
&kp ESC       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                    &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp MINUS
&kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T                                     &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSPC
&caps_word    &hml LGUI A   &hml LALT S   &hml LCTRL D  &hml LSHFT F  &hml RALT G                               &hmr RALT H   &hmr RSHFT J  &hmr LCTRL K  &hmr LALT L   &hmr GUI SEMI &kp SQT
&kp GRAVE     &kp Z         &kp X         &kp C         &kp V         &kp B         &kp LBKT      &kp RBKT      &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp BSLH
                                          &none         &lt FUN TAB   &lt NAV BSPC  &lt NUM DEL   &lt NAV RET   &lt SYM SPACE &lt ADJ ESC   &none
            >;
        };

        nav_layer {
            bindings = <
//            |             |             |             |             |             |             |             |             |             |             |             |             |
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                              &trans        &trans        &trans        &trans        &trans        &trans
&none         &none         &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &none                                     &kp LA(LEFT)  &none         &none         &kp LA(RIGHT) &kp CAPS      &none
&none         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &kp RALT                                  &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &caps_word    &none
&none         &none         &none         &none         &out OUT_BLE  &out OUT_USB  &none         &none         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &kp PSCRN     &none
                                          &none         &kp TAB       &kp BSPC      &kp DEL       &none         &none         &none         &none
            >;
        };

        num_layer {
            bindings = <
//            |             |             |             |             |             |             |             |             |             |             |             |             |
&trans        &trans        &trans        &trans        &trans        &trans                                    &trans        &trans        &trans        &trans        &trans        &trans
&none         &none         &none         &none         &none         &none                                     &kp LBKT      &kp N7        &kp N8        &kp N9        &kp RBKT      &trans
&none         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &kp RALT                                  &kp MINUS     &kp N4        &kp N5        &kp N6        &kp EQUAL     &none
&none         &none         &none         &none         &none         &none         &none         &none         &kp LT        &kp N1        &kp N2        &kp N3        &kp GT        &none
                                          &none         &kp TAB       &kp BSPC      &kp DEL       &none         &kp N0        &kp DOT       &none
            >;
        };

        sym_layer {
            bindings = <
//            |             |             |             |             |             |             |             |             |             |             |             |             |
&trans        &trans        &trans        &trans        &trans        &trans                                    &trans        &trans        &trans        &trans        &trans        &trans
&none         &kp LT        &kp MINUS     &kp EQUAL     &kp GT        &none                                     &none         &none         &none         &none         &none         &none
&none         &kp LBKT      &kp RBKT      &kp LPAR      &kp RPAR      &kp BSLH                                  &kp RALT      &kp RSHFT     &kp RCTRL     &kp LALT      &kp RGUI      &none
&none         &kp LBRC      &kp RBRC      &kp GRAVE     &kp APOS      &none         &none         &none         &none         &none         &none         &none         &none         &none
                                          &none         &none         &none         &none         &none         &none         &none         &none
            >;
        };

        fun_layer {
            bindings = <
//            |             |             |             |             |             |             |             |             |             |             |             |             |
&trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                    &none         &kp F10       &kp F11       &kp F12       &none         &none
&none         &none         &none         &none         &none         &none                                     &none         &kp F7        &kp F8        &kp F9        &kp F12       &none
&none         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &kp RALT                                  &none         &kp F4        &kp F5        &kp F6        &kp F11       &none
&none         &none         &none         &none         &none         &none         &none         &none         &none         &kp F1        &kp F2        &kp F3        &kp F10       &none
                                          &none         &none         &none         &none         &none         &none         &none         &none
            >;
        };

        adj_layer {
            bindings = <
//            |             |             |             |             |             |             |             |             |             |             |             |             |
&none         &none         &none         &none         &none         &none                                     &none         &none         &none         &none         &none         &none
&none         &none         &none         &none         &none         &none                                     &none         &none         &none         &none         &none         &none
&none         &none         &none         &none         &none         &none                                     &none         &none         &none         &none         &none         &none
&none         &none         &none         &none         &none         &none                                     &none         &none         &none         &none         &none         &none
                                          &none         &none         &none         &none         &none         &none         &none         &none
            >;
        };

    };
};
/* vim: set ft=c tw=174 sw=4 ts=4 et: */
