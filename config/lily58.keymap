#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define QWE 0
#define ENG 1
#define NAV 2
#define NUM 3
#define SYM 4
#define FUN 5
#define ADJ 6

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
  combo_##NAME { \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
    require-prior-idle-ms = <200>; \
  };

#define KEYS_L \
       0  1  2  3  4  5 \
      12 13 14 15 16 17 \
      24 25 26 27 28 29 \
      36 37 38 39 40 41 42
#define KEYS_R \
                                  6  7  8  9 10 11 \
                                 18 19 20 21 22 23 \
                                 30 31 32 33 34 35 \
                              43 44 45 46 47 48 49
#define THUMBS 50 51 52 53    54 55 56 57

&lt {
    tapping-term-ms = <300>;
    flavor = "balanced";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <150>;
};
&sl {
    release-after-ms = <2000>;
};

/ {
    combos {
        compatible = "zmk,combos";

        COMBO(bootl_l,        &bootloader, 0 50 53,  QWE)
        COMBO(bootl_r,        &bootloader, 11 54 57, QWE)
        COMBO(adjust,         &mo ADJ,     51 52,    QWE ENG)
        COMBO(shift_capsword, &caps_word,  28 31,    QWE ENG)
        COMBO(we_escape,      &kp ESC,     14 15,    QWE ENG)
        COMBO(er_tab,         &kp TAB,     15 16,    QWE ENG)
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <400>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            require-prior-idle-ms = <120>;
        };
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <400>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            require-prior-idle-ms = <120>;
        };
        hmll: hmll {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <400>;
            quick-tap-ms = <150>;
            flavor = "hold-preferred";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            require-prior-idle-ms = <180>;
            hold-while-undecided;
        };
        hmrl: hmrl {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <400>;
            quick-tap-ms = <150>;
            flavor = "hold-preferred";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            require-prior-idle-ms = <180>;
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        querty_layer {
            label = "QWERTY";
            bindings = <
//            |             |             |             |             |             |                     |             |             |             |             |             |             |
&none         &none         &none         &none         &none         &none                                             &none         &none         &none         &none         &none         &none
&kp ESC       &kp Q         &kp W         &kp E         &kp R         &kp T                                             &kp Y         &kp U         &kp I         &kp O         &kp P         &kp MINUS
&none         &hml LGUI A   &hml LALT S   &hmll LCTRL D &hmll LSHFT F &hml RALT G                                       &hmr RALT H   &hmr RSHFT J  &hmr LCTRL K  &hmr LALT L   &hmr RGUI SEMI &kp APOS
&kp GRAVE     &kp Z         &kp X         &kp C         &kp V         &kp B         &kp LBKT              &kp RBKT      &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp BSLH
                                          &none         &lt FUN TAB   &lt NAV BSPC  &lt NUM TAB           &lt NAV RET   &lt SYM SPACE &lt ADJ ESC   &none
            >;
        };

        engram_layer {
            label = "Engram";
            bindings = <
//                         |             |             |             |             |                     |             |             |             |             |             |             |
&trans        &trans        &trans        &trans        &trans        &trans                                            &trans        &trans        &trans        &trans        &trans        &trans
&trans        &kp B         &hml RALT Y   &kp O         &kp U         &kp APOS                                          &kp SEMI      &kp L         &kp D         &hmr RALT W   &kp V         &kp Z
&trans        &hml LGUI C   &hml LALT I   &hmll LCTRL E &hmll LSHFT A &kp COMMA                                         &kp DOT       &hmrl RSHFT H &hmrl LCTRL T &hmr LALT S   &hmr RGUI N   &kp Q
&trans        &kp G         &kp X         &kp J         &kp K         &kp MINUS     &trans                &trans        &kp FSLH      &kp R         &kp M         &kp F         &kp P         &kp BSLH
                                          &trans        &trans        &trans        &trans                &trans        &trans        &trans        &trans
            >;
        };

        nav_layer {
            label = "Navigation";
            bindings = <
//            |             |             |             |             |             |                     |             |             |             |             |             |             |
&none         &none         &none         &none         &none         &none                                             &none         &none         &none         &none         &none         &none
&none         &none         &none         &none         &none         &none                                             &kp LA(LEFT)  &none         &none         &kp LA(RIGHT) &kp CAPS      &none
&none         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &kp RALT                                          &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &caps_word    &none
&none         &none         &none         &none         &none         &none         &none                 &none         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &kp PSCRN     &none
                                          &none         &none         &none         &none                 &none         &none         &none         &none
            >;
        };

        numbers_layer {
            label = "Numbers";
            bindings = <
//            |             |             |             |             |             |                     |             |             |             |             |             |             |
&none         &none         &none         &none         &none         &none                                             &none         &none         &none         &none         &none         &none
&none         &none         &none         &none         &none         &none                                             &kp GRAVE     &kp N7        &kp N8        &kp N9        &kp BSLH      &none
&none         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &kp RALT                                          &kp MINUS     &kp N4        &kp N5        &kp N6        &kp EQUAL     &none
&none         &none         &none         &none         &none         &none         &none                 &none         &kp COMMA     &kp N1        &kp N2        &kp N3        &kp DOT       &none
                                          &none         &none         &none         &none                 &kp DOT       &kp N0        &kp DOT       &none
            >;
        };

        symbol_layer {
            label = "Symbol";
            bindings = <
//            |             |             |             |             |             |                     |             |             |             |             |             |             |
&none         &none         &none         &none         &none         &none                                             &none         &none         &none         &none         &none         &none
&none         &kp CAPS      &none         &kp LBKT      &kp RBKT      &none                                             &none         &none         &none         &none         &none         &none
&none         &caps_word    &kp APOS      &kp LPAR      &kp RPAR      &none                                             &kp RALT      &kp RSHFT     &kp RCTRL     &kp LALT      &kp RGUI      &none
&none         &none         &none         &kp LBRC      &kp RBRC      &none         &none                 &none         &none         &none         &none         &none         &none         &none
                                          &none         &none         &kp DEL       &none                 &none         &none         &none         &none
            >;
        };

        function_layer {
            label = "Function";
            bindings = <
//            |             |             |             |             |             |                     |             |             |             |             |             |             |
&none         &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                            &none         &none         &none         &none         &none         &none
&none         &none         &none         &none         &none         &none                                             &none         &kp F7        &kp F8        &kp F9        &kp F12       &none
&none         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &kp RALT                                          &none         &kp F4        &kp F5        &kp F6        &kp F11       &none
&none         &none         &none         &none         &none         &none         &none                 &none         &none         &kp F1        &kp F2        &kp F3        &kp F10       &none
                                          &none         &none         &none         &none                 &none         &none         &none         &none
            >;
        };

        adjust_layer {
            label = "Adjust";
            bindings = <
//            |             |             |             |             |             |                     |             |             |             |             |             |             |
&none         &none         &none         &none         &none         &none                                             &none         &none         &none         &none         &none         &none
&none         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                      &none         &kp C_VOL_UP  &kp C_BRI_UP  &none         &none         &none
&none         &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4                                     &none         &kp C_VOL_DN  &kp C_BRI_DN  &none         &none         &none
&none         &bt BT_CLR    &none         &none         &out OUT_USB  &out OUT_BLE  &none                 &none         &none         &kp C_MUTE    &none         &none         &none         &none
                                          &none         &none         &none         &tog ENG              &none         &none         &none         &none
            >;
        };
    };
};
// //            |             |             |             |             |             |                     |             |             |             |             |             |             |
// &none         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &kp RALT                                          &kp RALT      &kp RSHFT     &kp RCTRL     &kp LALT      &kp RGUI      &none
// &trans        &trans        &trans        &trans        &trans        &trans                                            &trans        &trans        &trans        &trans        &trans        &trans
// &none         &none         &none         &none         &none         &none                                             &none         &none         &none         &none         &none         &none
//                                           &none         &none         &none         &none                 &none         &none         &none         &none
/* vim: set ft=c tw=174 sw=4 ts=4 et: */
